steps:
- id: 'branch name'
  name: 'alpine'
  entrypoint: 'sh'  
  args: 
  - '-c'
  - | 
      echo "***********************"
      echo "$BRANCH_NAME"
      echo "***********************"
      if [ $BRANCH_NAME == "dev" ]
      then
      echo "you are on the dev branch and will build your infrastructure in the dev workspace"
      else
      echo "you are on a different branch and will build your infrastructure in the default workspace"
      fi

# [START get-creds]
- id: 'get-creds'
  name: 'google/cloud-sdk'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      gcloud secrets versions access latest --secret=project_creds > project_creds.json
      mv project_creds.json modules/
      cd modules/
# [END get-creds]

# [START get-slackurl]
- id: 'get-slackurl'
  name: 'google/cloud-sdk'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      gcloud secrets versions access latest --secret=slack-webhook-url >> present.txt
      if [ -f present.txt ]
      then
      export SLACK_WEBHOOK=$(gcloud secrets versions access latest --secret=slack-webhook-url)
      echo "***********************"
      echo "export of webhook variable complete"
      echo "***********************"
      else
      echo "***********************"
      echo "file is not found no slack url could be established"
      echo "***********************"
      fi  
      env
# [END get-slackurl]

# [START tf-notify]
- id: 'tf notify'
  name: 'cloudposse/slack-notifier'
  entrypoint: 'sh'
  dir: 'modules/'
  args: 
  - '-c'
  - |
      -e SLACK_WEBHOOK_URL="$SLACK_WEBHOOK" \
      -e SLACK_USER_NAME="GCP CLOUD BUILD BOT" \
      -e SLACK_ICON_EMOJI=":white_check_mark:" \
      -e SLACK_FALLBACK="Deployed to Staging environment" \
      -e SLACK_COLOR="good" \
      -e SLACK_PRETEXT="Added XYZ to feature-104" \
      -e SLACK_AUTHOR_NAME="Auto Deploy Robot" \
      -e SLACK_AUTHOR_LINK="https://cloudposse.com/wp-content/uploads/sites/29/2018/02/small-cute-robot-square.png" \
      -e SLACK_AUTHOR_ICON="https://cloudposse.com/wp-content/uploads/sites/29/2018/02/small-cute-robot-square.png" \
      -e SLACK_TITLE="Environment Updated" \
      -e SLACK_TITLE_LINK="http://demo1.cloudposse.com" \
      -e SLACK_TEXT="The latest changes have been deployed" \
      -e SLACK_THUMB_URL="https://cloudposse.com/wp-content/uploads/sites/29/2018/02/SquareLogo2.png" \
      -e SLACK_FOOTER="Helm Deployment" \
      -e SLACK_FOOTER_ICON="https://cloudposse.com/wp-content/uploads/sites/29/2018/02/kubernetes.png" \
      -e SLACK_FIELD1_TITLE="Environment" \
      -e SLACK_FIELD1_VALUE="Staging" \
      -e SLACK_FIELD1_SHORT="true" \
      -e SLACK_FIELD2_TITLE="Namespace" \
      -e SLACK_FIELD2_VALUE="feature-104" \
      -e SLACK_FIELD2_SHORT="true" \
      slack-notifier
      env
# [END tf-notify]

# [START tf-init]
- id: 'tf init'
  name: 'hashicorp/terraform:0.13.6'
  entrypoint: 'sh'
  dir: 'modules/'
  args: 
  - '-c'
  - |
      terraform init
# [END tf-init]

# [START tf-fmt]
- id: 'tf fmt'
  name: 'hashicorp/terraform:0.13.6'
  entrypoint: 'sh'
  dir: 'modules/'
  args: 
  - '-c'
  - |
      echo "Terraform format"
      terraform fmt
# [END tf-fmt]

# [START tf-validate]
- id: 'tf validate'
  name: 'hashicorp/terraform:0.13.6'
  entrypoint: 'sh'
  dir: 'modules/'
  args: 
  - '-c'
  - |
      echo "Terraform validate"
      terraform validate
# [END tf-validate]

# [START tf-plan]
- id: 'tf plan'
  name: 'hashicorp/terraform:0.13.6'
  entrypoint: 'sh'
  dir: 'modules/'
  args: 
  - '-c'
  - | 
      if [ $BRANCH_NAME == "dev" ]
      then
      terraform workspace select dev
      else
      terraform workspace select default
      fi
      terraform workspace list
      terraform plan -var-file=myproject.tfvars
# [END tf-plan]

# [START tf-destroy]
- id: 'tf destory'
  name: 'hashicorp/terraform:0.13.6'
  entrypoint: 'sh'
  dir: 'modules/'
  args: 
  - '-c'
  - | 
      terraform workspace list
      terraform destroy --auto-approve -var-file=myproject.tfvars
# [END tf-destory]

# [START tf-apply]
- id: 'tf apply'
  name: 'hashicorp/terraform:0.13.6'
  entrypoint: 'sh'
  dir: 'modules/'
  args: 
  - '-c'
  - | 
      terraform workspace list
      terraform apply --auto-approve -var-file=myproject.tfvars
# [END tf-apply]      

# [START tf-cleanup]
- id: 'tf cleanup'
  name: 'hashicorp/terraform:0.13.6'
  entrypoint: 'sh'
  dir: 'modules/'
  args: 
  - '-c'
  - | 
      terraform workspace list
      terraform destroy --auto-approve -var-file=myproject.tfvars
# [END tf-cleanup]